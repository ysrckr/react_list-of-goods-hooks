{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","sortByType","reverse","App","useState","setIsReversed","NONE","setSortType","sortBy","resetButton","type","className","onClick","cn","bind","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA2BK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAERC,EAAY,YAAOH,GAQvB,OANAG,EAnBK,SAAoBF,EAAoBE,GAC7C,OAAOA,EAAaC,MAAK,SAACC,EAAOC,GAC/B,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKT,EAASY,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAWEC,CAAWV,EAAUE,GAEhCD,GACFC,EAAaS,UAGRT,G,SApCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAMgB,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOZ,EAAP,KAAmBa,EAAnB,KACA,EAAgCD,mBAASjB,EAASmB,MAAlD,mBAAOf,EAAP,KAAiBgB,EAAjB,KAMMC,EAAS,SAACd,GACda,EAAYb,IAQRD,EAAeJ,EAAkBD,EAAiB,CACtDG,WACAC,eAIIiB,GADYlB,IAAaJ,EAASmB,MAAQd,IAE9C,wBACEkB,KAAK,SACLC,UAAU,4BACVC,QAfU,WACZL,EAAYpB,EAASmB,MACrBD,GAAc,IAUd,mBASF,OACE,sBAAKM,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACED,KAAK,SACLC,UAAWE,IAAG,iBACZ,CACE,WAAYtB,IAAaJ,EAASU,WAEtCe,QAASJ,EAAOM,KAAK,KAAM3B,EAASU,UANtC,iCAWA,wBACEa,KAAK,SACLC,UAAWE,IAAG,oBAAqB,CACjC,WAAYtB,IAAaJ,EAASY,SAEpCa,QAASJ,EAAOM,KAAK,KAAM3B,EAASY,QALtC,4BAUA,wBACEW,KAAK,SACLC,UAAWE,IAAG,oBAAqB,CACjC,YAAarB,IAEfoB,QA1Da,WACnBP,GAAeb,IAoDX,qBAUCiB,KAGH,6BACE,6BACGhB,EAAasB,KAAI,SAACC,GAAD,OAChB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,cC/HrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d6f7d4cf.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport function sortByType(sortType: SortType, visibleGoods: string[]) {\n  return visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  let visibleGoods = [...goods];\n\n  visibleGoods = sortByType(sortType, visibleGoods);\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const reverseGoods = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const sortBy = (sort: SortType) => {\n    setSortType(sort);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const visibleGoods = getReorderedGoods(goodsFromServer, {\n    sortType,\n    isReversed,\n  });\n\n  const isChanged = sortType !== SortType.NONE || isReversed;\n  const resetButton = isChanged && (\n    <button\n      type=\"button\"\n      className=\"button is-danger is-light\"\n      onClick={reset}\n    >\n      Reset\n    </button>\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n          onClick={sortBy.bind(null, SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={sortBy.bind(null, SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        {resetButton}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map((good) => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}